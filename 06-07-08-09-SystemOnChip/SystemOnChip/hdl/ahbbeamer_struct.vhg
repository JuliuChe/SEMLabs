--
-- VHDL Architecture SystemOnChip.ahbBeamer.struct
--
-- Created:
--          by - axel.amand.UNKNOWN (WE7860)
--          at - 15:00:20 28.04.2023
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.2 (Build 5)
--
LIBRARY ieee;
  USE ieee.std_logic_1164.all;
  USE ieee.numeric_std.ALL;
LIBRARY AhbLite;
  USE AhbLite.ahbLite.all;

LIBRARY SystemOnChip;

ARCHITECTURE struct OF ahbBeamer IS

    -- Architecture declarations
    constant signalBitNb: positive := 16;
    constant updatePeriodBitNb : positive := 16;

    -- Internal signal declarations
    SIGNAL reset          : std_ulogic;
    SIGNAL run            : std_ulogic;
    SIGNAL interpolateLin : std_ulogic;
    SIGNAL updatePeriod   : unsigned(updatePeriodBitNb-1 DOWNTO 0);
    SIGNAL memX           : std_ulogic_vector(signalBitNb-1 DOWNTO 0);
    SIGNAL memY           : std_ulogic_vector(signalBitNb-1 DOWNTO 0);
    SIGNAL newPolynom     : std_ulogic;


    -- Component Declarations
    COMPONENT ahbBeamerOperator
    GENERIC (
        updatePeriodBitNb : positive := 16;
        signalBitNb       : positive := 16
    );
    PORT (
        outX           : OUT    std_ulogic ;
        run            : IN     std_ulogic ;
        clock          : IN     std_ulogic ;
        reset          : IN     std_ulogic ;
        outY           : OUT    std_ulogic ;
        selSinCos      : IN     std_ulogic ;
        interpolateLin : IN     std_ulogic ;
        updatePeriod   : IN     unsigned (updatePeriodBitNb-1 DOWNTO 0);
        memX           : IN     std_ulogic_vector (signalBitNb-1 DOWNTO 0);
        memY           : IN     std_ulogic_vector (signalBitNb-1 DOWNTO 0);
        newPolynom     : OUT    std_ulogic 
    );
    END COMPONENT;
    COMPONENT ahbBeamerRegisters
    GENERIC (
        updatePeriodBitNb   : positive := 16;
        signalBitNb         : positive := 16;
        patternAddressBitNb : positive := 8;
        testOutBitNb        : positive := 16
    );
    PORT (
        testOut        : OUT    std_ulogic_vector (1 TO testOutBitNb);
        memX           : OUT    std_ulogic_vector (signalBitNb-1 DOWNTO 0);
        memY           : OUT    std_ulogic_vector (signalBitNb-1 DOWNTO 0);
        run            : OUT    std_ulogic ;
        updatePeriod   : OUT    unsigned (updatePeriodBitNb-1 DOWNTO 0);
        interpolateLin : OUT    std_ulogic ;
        newPolynom     : IN     std_ulogic ;
        hClk           : IN     std_ulogic ;
        hRData         : OUT    std_ulogic_vector (ahbDataBitNb-1 DOWNTO 0);
        hAddr          : IN     unsigned (ahbAddressBitNb-1 DOWNTO 0);
        hReset_n       : IN     std_ulogic ;
        hWData         : IN     std_ulogic_vector (ahbDataBitNb-1 DOWNTO 0);
        hTrans         : IN     std_ulogic_vector (ahbTransBitNb-1 DOWNTO 0);
        hWrite         : IN     std_ulogic ;
        hSel           : IN     std_ulogic ;
        hReady         : OUT    std_ulogic ;
        hResp          : OUT    std_ulogic 
    );
    END COMPONENT;

    -- Optional embedded configurations
    -- pragma synthesis_off
    FOR ALL : ahbBeamerOperator USE ENTITY SystemOnChip.ahbBeamerOperator;
    FOR ALL : ahbBeamerRegisters USE ENTITY SystemOnChip.ahbBeamerRegisters;
    -- pragma synthesis_on


BEGIN
    -- Architecture concurrent statements
    -- HDL Embedded Text Block 2 eb2
    --process
    --begin
    --  newPolynom <= '0';
    --  for index in 1 to 2**4-1 loop
    --    wait until rising_edge(clock);
    --  end loop;
    --  newPolynom <= '1';
    --  wait until rising_edge(clock);
    --end process;

    -- HDL Embedded Text Block 3 eb3
    reset <= not hReset_n;


    -- Instance port mappings.
    I_op : ahbBeamerOperator
        GENERIC MAP (
            updatePeriodBitNb => updatePeriodBitNb,
            signalBitNb       => signalBitNb
        )
        PORT MAP (
            outX           => outX,
            run            => run,
            clock          => hClk,
            reset          => reset,
            outY           => outY,
            selSinCos      => selSinCos,
            interpolateLin => interpolateLin,
            updatePeriod   => updatePeriod,
            memX           => memX,
            memY           => memY,
            newPolynom     => newPolynom
        );
    I_regs : ahbBeamerRegisters
        GENERIC MAP (
            updatePeriodBitNb   => updatePeriodBitNb,
            signalBitNb         => signalBitNb,
            patternAddressBitNb => patternAddressBitNb,
            testOutBitNb        => testOutBitNb
        )
        PORT MAP (
            testOut        => testOut,
            memX           => memX,
            memY           => memY,
            run            => run,
            updatePeriod   => updatePeriod,
            interpolateLin => interpolateLin,
            newPolynom     => newPolynom,
            hClk           => hClk,
            hRData         => hRData,
            hAddr          => hAddr,
            hReset_n       => hReset_n,
            hWData         => hWData,
            hTrans         => hTrans,
            hWrite         => hWrite,
            hSel           => hSel,
            hReady         => hReady,
            hResp          => hResp
        );

END struct;
