--
-- VHDL Architecture PipelinedOperators_test.pipelineAdder_tb.struct
--
-- Created:
--          by - julien.chevalle1.UNKNOWN (WE2330802)
--          at - 15:41:40 03.05.2024
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.2 (Build 5)
--
LIBRARY ieee;
  USE ieee.std_logic_1164.all;
  USE ieee.numeric_std.ALL;

LIBRARY PipelinedOperators;
LIBRARY PipelinedOperators_test;

ARCHITECTURE struct OF pipelineAdder_tb IS

    -- Architecture declarations
    constant adderBitNb: positive := 32;
    constant pipelineStageNb: positive := 4;
    constant clockFrequency : real := 60.0E6;
    --constant clockFrequency : real := 66.0E6;

    -- Internal signal declarations
    SIGNAL a     : signed(adderBitNb-1 DOWNTO 0);
    SIGNAL b     : signed(adderBitNb-1 DOWNTO 0);
    SIGNAL cIn   : std_ulogic;
    SIGNAL cOut  : std_ulogic;
    SIGNAL clock : std_ulogic;
    SIGNAL reset : std_ulogic;
    SIGNAL sum   : signed(adderBitNb-1 DOWNTO 0);


    -- Component Declarations
    COMPONENT pipelineAdder
    GENERIC (
        bitNb   : positive;
        stageNb : positive
    );
    PORT (
        sum   : OUT    signed (bitNb-1 DOWNTO 0);
        clock : IN     std_ulogic ;
        reset : IN     std_ulogic ;
        cIn   : IN     std_ulogic ;
        cOut  : OUT    std_ulogic ;
        a     : IN     signed (bitNb-1 DOWNTO 0);
        b     : IN     signed (bitNb-1 DOWNTO 0)
    );
    END COMPONENT;
    COMPONENT pipelineAdder_tester
    GENERIC (
        adderBitNb     : positive := 32;
        stageNb        : positive := 4;
        clockFrequency : real     := 60.0E6
    );
    PORT (
        cOut  : IN     std_ulogic ;
        sum   : IN     signed (adderBitNb-1 DOWNTO 0);
        a     : OUT    signed (adderBitNb-1 DOWNTO 0);
        b     : OUT    signed (adderBitNb-1 DOWNTO 0);
        cIn   : OUT    std_ulogic ;
        clock : OUT    std_ulogic ;
        reset : OUT    std_ulogic 
    );
    END COMPONENT;

    -- Optional embedded configurations
    -- pragma synthesis_off
    FOR ALL : pipelineAdder USE ENTITY PipelinedOperators.pipelineAdder;
    FOR ALL : pipelineAdder_tester USE ENTITY PipelinedOperators_test.pipelineAdder_tester;
    -- pragma synthesis_on


BEGIN

    -- Instance port mappings.
    I_DUT : pipelineAdder
        GENERIC MAP (
            bitNb   => adderBitNb,
            stageNb => pipelineStageNb
        )
        PORT MAP (
            sum   => sum,
            clock => clock,
            reset => reset,
            cIn   => cIn,
            cOut  => cOut,
            a     => a,
            b     => b
        );
    I_tester : pipelineAdder_tester
        GENERIC MAP (
            adderBitNb     => adderBitNb,
            stageNb        => pipelineStageNb,
            clockFrequency => clockFrequency
        )
        PORT MAP (
            cOut  => cOut,
            sum   => sum,
            a     => a,
            b     => b,
            cIn   => cIn,
            clock => clock,
            reset => reset
        );

END struct;
