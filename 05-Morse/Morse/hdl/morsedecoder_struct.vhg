--
-- VHDL Architecture Morse.morseDecoder.struct
--
-- Created:
--          by - axel.amand.UNKNOWN (WE7860)
--          at - 08:02:13 08.05.2023
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.2 (Build 5)
--
LIBRARY ieee;
  USE ieee.std_logic_1164.all;
  USE ieee.numeric_std.all;

LIBRARY Memory;
LIBRARY Morse;
LIBRARY RS232;

ARCHITECTURE struct OF morseDecoder IS

    -- Architecture declarations
    constant unitCountBitNb: positive := 3;
    constant fifoDepth : positive := 8;

    -- Internal signal declarations
    SIGNAL symbolValue    : std_ulogic;
    SIGNAL symbolValid    : std_ulogic;
    SIGNAL symbolDuration : unsigned(unitCountBitNb-1 DOWNTO 0);
    SIGNAL charValid      : std_ulogic;
    SIGNAL charOut        : std_ulogic_vector(uartDataBitNb-1 DOWNTO 0);
    SIGNAL txWord         : std_ulogic_vector(uartDataBitNb-1 DOWNTO 0);
    SIGNAL txBusy         : std_ulogic;
    SIGNAL txSend         : std_ulogic;
    SIGNAL txFifoEmpty    : std_ulogic;

    -- Implicit buffer signal declarations
    SIGNAL morseEnvelope_internal : std_ulogic;


    -- Component Declarations
    COMPONENT FIFO_bram
    GENERIC (
        dataBitNb : positive := 8;
        depth     : positive := 8
    );
    PORT (
        write   : IN     std_ulogic ;
        clock   : IN     std_ulogic ;
        reset   : IN     std_ulogic ;
        dataOut : OUT    std_ulogic_vector (dataBitNb-1 DOWNTO 0);
        read    : IN     std_ulogic ;
        dataIn  : IN     std_ulogic_vector (dataBitNb-1 DOWNTO 0);
        empty   : OUT    std_ulogic ;
        full    : OUT    std_ulogic 
    );
    END COMPONENT;
    COMPONENT envelopeRetreiver
    GENERIC (
        toneDivide    : positive := 100E3;
        deglitchBitNb : positive := 8
    );
    PORT (
        clock         : IN     std_ulogic ;
        reset         : IN     std_ulogic ;
        morseWithTone : IN     std_ulogic ;
        morseEnvelope : OUT    std_ulogic 
    );
    END COMPONENT;
    COMPONENT morseToCharDecoder
    GENERIC (
        unitCountDivide : positive := 100;
        unitCountBitNb  : positive := 2;
        characterBitNb  : positive := 8
    );
    PORT (
        clock          : IN     std_ulogic ;
        reset          : IN     std_ulogic ;
        charValid      : OUT    std_ulogic ;
        symbolDuration : IN     unsigned (unitCountBitNb-1 DOWNTO 0);
        symbolValid    : IN     std_ulogic ;
        symbolValue    : IN     std_ulogic ;
        charOut        : OUT    std_ulogic_vector (characterBitNb-1 DOWNTO 0)
    );
    END COMPONENT;
    COMPONENT symbolLengthCounter
    GENERIC (
        unitCountDivide : positive := 100;
        unitCountBitNb  : positive := 2
    );
    PORT (
        clock          : IN     std_ulogic ;
        reset          : IN     std_ulogic ;
        morseCode      : IN     std_ulogic ;
        symbolDuration : OUT    unsigned (unitCountBitNb-1 DOWNTO 0);
        symbolValid    : OUT    std_ulogic ;
        symbolValue    : OUT    std_ulogic 
    );
    END COMPONENT;
    COMPONENT serialPortTransmitter
    GENERIC (
        baudRateDivide : positive := 2083;
        dataBitNb      : positive := 8;
        stopBitNb      : positive := 1
    );
    PORT (
        TxD    : OUT    std_ulogic ;
        clock  : IN     std_ulogic ;
        reset  : IN     std_ulogic ;
        dataIn : IN     std_ulogic_vector (dataBitNb-1 DOWNTO 0);
        send   : IN     std_ulogic ;
        busy   : OUT    std_ulogic 
    );
    END COMPONENT;

    -- Optional embedded configurations
    -- pragma synthesis_off
    FOR ALL : FIFO_bram USE ENTITY Memory.FIFO_bram;
    FOR ALL : envelopeRetreiver USE ENTITY Morse.envelopeRetreiver;
    FOR ALL : morseToCharDecoder USE ENTITY Morse.morseToCharDecoder;
    FOR ALL : serialPortTransmitter USE ENTITY RS232.serialPortTransmitter;
    FOR ALL : symbolLengthCounter USE ENTITY Morse.symbolLengthCounter;
    -- pragma synthesis_on


BEGIN
    -- Architecture concurrent statements
    -- HDL Embedded Text Block 2 eb2
    process(reset, clock)
      begin
        if reset = '1' then
          txSend <= '0';
        elsif rising_edge(clock) then
          if ( (txFifoEmpty = '0') and (txBusy = '0') ) then
            txSend <= '1';
          else
            txSend <= '0';
          end if;
        end if;
      end process;
          


    -- Instance port mappings.
    I0 : FIFO_bram
        GENERIC MAP (
            dataBitNb => uartDataBitNb,
            depth     => fifoDepth
        )
        PORT MAP (
            write   => charValid,
            clock   => clock,
            reset   => reset,
            dataOut => txWord,
            read    => txSend,
            dataIn  => charOut,
            empty   => txFifoEmpty,
            full    => OPEN
        );
    I_env : envelopeRetreiver
        GENERIC MAP (
            toneDivide    => integer(clockFrequency/toneFrequency + 0.5),
            deglitchBitNb => deglitchBitNb
        )
        PORT MAP (
            clock         => clock,
            reset         => reset,
            morseWithTone => morseCode,
            morseEnvelope => morseEnvelope_internal
        );
    I_dec : morseToCharDecoder
        GENERIC MAP (
            unitCountDivide => integer(clockFrequency*unitDuration + 0.5),
            unitCountBitNb  => unitCountBitNb,
            characterBitNb  => uartDataBitNb
        )
        PORT MAP (
            clock          => clock,
            reset          => reset,
            charValid      => charValid,
            symbolDuration => symbolDuration,
            symbolValid    => symbolValid,
            symbolValue    => symbolValue,
            charOut        => charOut
        );
    I_len : symbolLengthCounter
        GENERIC MAP (
            unitCountDivide => integer(clockFrequency*unitDuration + 0.5),
            unitCountBitNb  => unitCountBitNb
        )
        PORT MAP (
            clock          => clock,
            reset          => reset,
            morseCode      => morseEnvelope_internal,
            symbolDuration => symbolDuration,
            symbolValid    => symbolValid,
            symbolValue    => symbolValue
        );
    I_tx : serialPortTransmitter
        GENERIC MAP (
            dataBitNb      => uartDataBitNb,
            baudRateDivide => integer(clockFrequency/uartBaudRate + 0.5)
        )
        PORT MAP (
            TxD    => TxD,
            clock  => clock,
            reset  => reset,
            dataIn => txWord,
            send   => txSend,
            busy   => txBusy
        );

    -- Implicit buffered output assignments
    morseEnvelope <= morseEnvelope_internal;

END struct;
